var widthScreen=document.documentElement.clientWidth,heightScreen=document.documentElement.clientHeight,canvas=document.getElementById("Canvas"),gameOverWindow=document.querySelector(".game-over-notify"),squarepx=50,greatWall=0;widthScreen<900&&widthScreen>500&&heightScreen>500?(canvas.style.height="450px",canvas.style.width="450px"):widthScreen<500&&(canvas.style.height="300px",canvas.style.width="300px");var map,gameCount=0,ctx=canvas.getContext("2d"),gameStop=1,left=37,down=40,right=39,top_key=87,left_key=65,down_key=83,right_key=68,Score=0,snake=[],snake_length=10,def_speed=10,snake_spd_y=-10,snake_spd_x=0,gameSpeed=80;function getRandomInt(e,t){return Math.floor(Math.random()*(t-e))+e}function snakeBase(e){for(var t=e/2,a=map[t][t],n=0;n<snake_length;n++)snake[n]={x:a.x,y:a.y}}function Create2DArray(e){for(var t=[],a=0;a<e;a++)t[a]=[];return t}function fieldMarking(e,t,a){var n=a,o=e/a,s=t/a;map=Create2DArray(a);for(var i=0;i<a;i++)for(var r=0;r<a;r++)map[i][r]={x:r*o,y:s*i};snakeBase(n)}fieldMarking(canvas.width,canvas.height,squarepx),document.addEventListener("keydown",keyDownHandler,!1);var delay=function(){var e={};return function(t,a,n){n=n||"defaultTimer",clearTimeout(e[n]||0),e[n]=setTimeout(t,a)}}();function keyDownHandler(e){switch(e.keyCode){case 38:case top_key:if(1==gameStop)return 0;delay(function(){0==snake_spd_y&&0!=snake_spd_x&&(snake_spd_y=-def_speed,snake_spd_x=0)},gameSpeed);break;case left:case left_key:if(1==gameStop)return 0;delay(function(){0==snake_spd_x&&(snake_spd_y=0,snake_spd_x=-def_speed)},gameSpeed);break;case down:case down_key:if(1==gameStop)return 0;delay(function(){0==snake_spd_y&&0!=snake_spd_x&&(snake_spd_y=def_speed,snake_spd_x=0)},gameSpeed);break;case right:case right_key:if(1==gameStop)return 0;delay(function(){0==snake_spd_x&&(snake_spd_y=0,snake_spd_x=def_speed)},gameSpeed);break;case 80:gameStop=!gameStop}}var base_w=canvas.width,base_h=canvas.height;function theWall(){(snake[0].x>base_w-10||snake[0].x<0)&&fail(),(snake[0].y>base_h-10||snake[0].y<0)&&fail()}function offWall(){(snake[0].x>base_w-10||snake[0].x<0)&&teleport(snake[0].x,0),(snake[0].y>base_h-10||snake[0].y<0)&&teleport(snake[0].y,1)}function teleport(e,t){0==t&&(snake[0].x>base_w-10?snake[0].x=0:snake[0].x=500),1==t&&(snake[0].y>base_h-10?snake[0].y=0:snake[0].y=500)}function theEat(){for(var e=0;e<Foods.length;e++){if(null!=Foods[e].x)if(Foods[e].x-5==snake[0].x&&Foods[e].y-5==snake[0].y)return logicVar=getRandomInt(1,5),Foods.splice(e,1),generateFood(),3==getRandomInt(0,5)&&generateBigFood(),1}if(BigFoods.length)for(e=0;e<BigFoods.length;e++)if(null!=BigFoods[e].x)for(var t=12;--t;){if(BigFoods[e].x-6-t==snake[0].x&&BigFoods[e].y-6-t==snake[0].y)return logicVar=getRandomInt(10,27),BigFoods.splice(e,1),1;if(BigFoods[e].x-6+t==snake[0].x&&BigFoods[e].y-6+t==snake[0].y)return logicVar=getRandomInt(5,25),BigFoods.splice(e,1),1}}function fail(){gameStop=1,++gameCount,scoreUi.textContent=Score,window.setTimeout(function(){gameOverWindow.classList.add("active")},350)}var state=0;function snakeBite(e,t){snake[0].x==t&&snake[0].y==e&&fail()}function collisionDetection(){0==greatWall?theWall():offWall(),theEat()}function drawSnake(){for(var e=snake.length-1;e>=0;e--)0!=e&&snakeBite(snake[e].y,snake[e].x),ctx.beginPath(),ctx.rect(snake[e].x,snake[e].y,10,10),ctx.fillStyle="#0095DD",ctx.fill(),ctx.closePath()}var Foods=[],BigFoods=[];function generateFood(){var e=map.length,t=getRandomInt(0,e+1),a=getRandomInt(0,e+1);if(void 0!==map[t]&&void 0!==map[t][a])for(var n=map[t][a],o=snake.length-1;o>=0;o--){if(null==typeof snake[o].x)return void generateFood();try{if(snake[o].x!=n.x&&snake[o].y!=n.y){Foods.push({x:5+n.x,y:5+n.y});break}}catch{continue}}else generateFood()}function generateBigFood(){var e=map.length,t=getRandomInt(0,e+1),a=getRandomInt(0,e+1);if(void 0!==map[t]&&void 0!==map[t][a])for(var n=map[t][a],o=snake.length-1;o>=0;o--){if(null==typeof snake[o].x)return void generateBigFood();try{if(snake[o].x!=n.x&&snake[o].y!=n.y){BigFoods.push({x:5+n.x,y:5+n.y});break}}catch{continue}}else generateBigFood()}function renderFood(e,t){ctx.beginPath(),ctx.arc(e,t,6,0,2*Math.PI),ctx.fillStyle="#690",ctx.fill(),ctx.closePath()}function renderBigFood(e,t){ctx.beginPath(),ctx.arc(e,t,12,0,2*Math.PI),ctx.fillStyle="#df4037",ctx.fill(),ctx.closePath()}function drawStop(){ctx.font="16px Arial",ctx.fillStyle="#de0e37",ctx.fillText("Stop âš«",445,20)}function drawScore(){Score=snake.length-10,ctx.font="16px Arial",ctx.fillStyle="#0095DD",ctx.fillText("Score: "+Score,8,20)}var logicVar=0;function snakeMoveLogic(){theEat(),logicVar?logicVar=--logicVar:snake.pop(),snake.unshift({x:snake[0].x+snake_spd_x,y:snake[0].y+snake_spd_y})}function draw(){if(0==gameStop){ctx.clearRect(0,0,canvas.width,canvas.height);for(var e=0;e<Foods.length;e++)renderFood(Foods[e].x,Foods[e].y);for(e=0;e<BigFoods.length;e++)renderBigFood(BigFoods[e].x,BigFoods[e].y);snakeMoveLogic(),drawSnake(),collisionDetection(),drawScore()}else drawStop()}function clear(){ctx.clearRect(0,0,canvas.width,canvas.height),drawScore()}function Restart(){snake=[],Score=0,Foods=[],BigFoods=[],clear(),fieldMarking(canvas.width,canvas.height,squarepx),window.setTimeout(function(){generateFood(),clear(),gameStop=0},200),clear()}function recursiveTimeout(){window.setTimeout(function(){draw(),recursiveTimeout()},gameSpeed)}draw(),recursiveTimeout(),generateFood(),generateBigFood();var menue=document.querySelector(".menu"),scoreUi=document.querySelector(".game-over-notify--score");function playBtn(){gameCount>0&&Restart(),menue.classList.contains("fade")?gameStop=1:(menue.classList.toggle("fade"),window.setTimeout(function(){gameStop=0},250))}function toMenue(){menue.classList.remove("fade"),gameOverWindow.classList.remove("active")}function rest(){Restart(),gameOverWindow.classList.remove("active")}function otherList(e){document.querySelectorAll(".menu__list--item.menu__list--item--main").forEach(function(e,t,a){e.classList.remove("active")}),document.querySelector('.menu__list--item.menu__list--item--main[data-menu="'+e+'"]').classList.toggle("active")}var greatWallBtn=document.querySelector("#greatWall");function vallToggle(){greatWallBtn.classList.remove("menu__list-button--green"),greatWallBtn.classList.remove("menu__list-button--orange"),0==greatWall?(greatWallBtn.classList.add("menu__list-button--green"),greatWall=1):(greatWallBtn.classList.add("menu__list-button--orange"),greatWall=0)}
//# sourceMappingURL=../maps/all.min.js.map
