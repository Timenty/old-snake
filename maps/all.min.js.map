{"version":3,"sources":["main.js","menue.js"],"names":["widthScreen","document","documentElement","clientWidth","heightScreen","clientHeight","canvas","getElementById","gameOverWindow","querySelector","squarepx","greatWall","style","height","width","map","gameCount","ctx","getContext","gameStop","left","down","right","top_key","left_key","down_key","right_key","Score","snake","snake_length","def_speed","snake_spd_y","snake_spd_x","gameSpeed","getRandomInt","min","max","Math","floor","random","snakeBase","square","center","coords","i","x","y","Create2DArray","rows","arr","fieldMarking","f_grid","x_step","y_step","e","addEventListener","keyDownHandler","delay","timers","callback","ms","label","clearTimeout","setTimeout","keyCode","base_w","base_h","theWall","fail","offWall","teleport","xy","dirt","theEat","Foods","length","undefined","logicVar","splice","generateFood","generateBigFood","BigFoods","arch","scoreUi","textContent","window","classList","add","state","snakeBite","snake_y","snake_x","collisionDetection","drawSnake","beginPath","rect","fillStyle","fill","closePath","lengthM","random_x","random_y","food_coords","push","renderFood","cord_x","cord_y","arc","PI","renderBigFood","drawStop","font","fillText","drawScore","snakeMoveLogic","pop","unshift","draw","clearRect","clear","Restart","recursiveTimeout","menue","playBtn","contains","toggle","toMenue","remove","rest","otherList","numberList","querySelectorAll","forEach","item","greatWallBtn","vallToggle"],"mappings":"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","file":"../js/all.min.js","sourcesContent":["var widthScreen = document.documentElement.clientWidth;\nvar heightScreen = document.documentElement.clientHeight;\nvar canvas = document.getElementById(\"Canvas\");\nvar gameOverWindow = document.querySelector('.game-over-notify');\nvar squarepx = 50;\nvar greatWall = 0;\nif (((widthScreen < 900 ) && (widthScreen > 500)) && (heightScreen > 500)) {\n  // canvas.style.height = heightScreen-40+\"px\";\n  // canvas.style.width = widthScreen-40+\"px\";\n  canvas.style.height = 450 + \"px\";\n  canvas.style.width = 450 + \"px\";\n  // squarepx = 45;\n}else if(widthScreen < 500){\n  canvas.style.height = 300 + \"px\";\n  canvas.style.width = 300 + \"px\";\n  // squarepx = 30;\n}\nvar gameCount = 0;\nvar ctx = canvas.getContext(\"2d\");\nvar gameStop = 1;\nvar left = 37;\nvar down = 40;\nvar right = 39;\n// var top = 38; Не работает хз почему\nvar top_key = 87; //wasd\nvar left_key = 65;\nvar down_key = 83;\nvar right_key = 68;\n\nvar Score = 0;\nvar map;\nvar snake = [];\nvar snake_length = 10;\nvar def_speed = 10;\nvar snake_spd_y = -10;\nvar snake_spd_x = 0;\nvar gameSpeed = 80;\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction snakeBase(square){\n  var center = square / 2;\n  var coords = map[center][center];\n  for (var i = 0; i<snake_length; i++) {\n    snake[i] = {x: coords.x , y: coords.y};\n  }\n  // console.log(snake); //250 250\n}\n\nfunction Create2DArray(rows) {\n  var arr = [];\n\n  for (var i=0;i<rows;i++) {\n     arr[i] = [];\n  }\n\n  return arr;\n}\nfunction fieldMarking(width, height, square){\n\n  var f_grid = square;\n  var x_step = width / square;\n  var y_step = height / square;\n  // console.log('x шаг = '+ x_step);\n  // console.log('y шаг = '+ y_step);\n\n  // console.log(\"Aspect     = \", w/r, \":\", h/r);\n  map = Create2DArray(square);\n\n  for (var i = 0; i<square; i++) {\n    for (var e = 0; e<square; e++) {\n      map[i][e] = {x: e * x_step, y: y_step * i};\n    }\n  }\n\n  // console.log(map);\n  // console.log();\n  snakeBase(f_grid);\n\n}\nfieldMarking(canvas.width, canvas.height, squarepx);\n\ndocument.addEventListener(\"keydown\", keyDownHandler, false);\nvar delay = (function(){\n    var timers = {};\n    return function (callback, ms, label) {\n        label = label || 'defaultTimer';\n        clearTimeout(timers[label] || 0);\n        timers[label] = setTimeout(callback, ms);\n    };\n})();\n\nfunction keyDownHandler(e) {\n  // p = 80\n  // console.log(e.keyCode);\n    switch (e.keyCode) {\n      case 38:\n      case top_key:\n        if (gameStop == 1 ) return 0;\n        delay(function(){\n        if ((snake_spd_y == 0) && (snake_spd_x != 0)) {\n            snake_spd_y = -def_speed;\n            snake_spd_x = 0;\n        }\n        }, gameSpeed);\n        break;\n      case left:\n      case left_key:\n        if (gameStop == 1 ) return 0;\n        delay(function(){\n        if (snake_spd_x == 0) {\n          snake_spd_y = 0;\n          snake_spd_x = -def_speed\n        }\n        }, gameSpeed);\n        break;\n      case down:\n      case down_key:\n        if (gameStop == 1 ) return 0;\n        delay(function(){\n        if ((snake_spd_y == 0) && (snake_spd_x != 0)) {\n          snake_spd_y = def_speed;\n          snake_spd_x = 0;\n        }\n        }, gameSpeed);\n        break;\n      case right:\n      case right_key:\n        if (gameStop == 1 ) return 0;\n        delay(function(){\n        if (snake_spd_x == 0) {\n            snake_spd_y = 0;\n            snake_spd_x = def_speed\n        }\n        }, gameSpeed);\n        break;\n      case 80:\n        gameStop = !gameStop;\n        break;\n    default:\n    }\n}\nvar base_w = canvas.width;\nvar base_h = canvas.height;\nfunction theWall(){\n  if ((snake[0].x > base_w-10) || (snake[0].x < 0)) {\n    fail();\n  }\n  if ((snake[0].y > base_h-10) || (snake[0].y < 0)) {\n    fail();\n  }\n}\nfunction offWall(){\n  if ((snake[0].x > base_w-10) || (snake[0].x < 0)) {\n    teleport(snake[0].x, 0);\n  }\n  if ((snake[0].y > base_h-10) || (snake[0].y < 0)) {\n    teleport(snake[0].y, 1);\n  }\n}\n// dir = 0 ~ x\n// dir = 1 ~ y\nfunction teleport(xy,dirt){\n  if (dirt == 0) {\n    if ((snake[0].x > base_w-10)) {\n      snake[0].x = 0;\n    }else{\n      snake[0].x = 500;\n    }\n  }\n  if (dirt == 1) {\n    if ((snake[0].y > base_h-10)) {\n      snake[0].y = 0;\n    }else{\n      snake[0].y = 500;\n    }\n  }\n};\nfunction theEat(){\n  for (var i = 0; i < Foods.length; i++) {\n\n    if (Foods[i].x != undefined) {\n\n      if (((Foods[i].x - 5) == snake[0].x) && ((Foods[i].y - 5) == snake[0].y)) {\n        // console.log(Foods);\n        logicVar = getRandomInt(1,5);\n        Foods.splice(i, 1);\n        // console.log(Foods);\n        generateFood();\n        var random = getRandomInt(0,5);\n        if (random == 3) {\n          generateBigFood();\n        }\n        return 1;\n      }\n    }\n  }\n  if (BigFoods.length) {\n    // console.log('ss');\n    for (var i = 0; i < BigFoods.length; i++) {\n\n      if (BigFoods[i].x != undefined) {\n        var arch = 12;\n        while(--arch){\n          if (((BigFoods[i].x - 6 - arch) == snake[0].x) && ((BigFoods[i].y - 6 - arch) == snake[0].y)) {\n            // console.log(\"Big food x : \"+ BigFoods[i].x);\n            // console.log(\"Big food y: \" + BigFoods[i].y);\n            // console.log(\"snake y x :\" + snake[0].y +\" \"+ snake[0].x)\n            //  console.log(\"arch : \"+ arch);\n            logicVar = getRandomInt(10,27);\n            BigFoods.splice(i, 1);\n            // generateBigFood();\n            return 1;\n          }\n          if (((BigFoods[i].x - 6 + arch) == snake[0].x) && ((BigFoods[i].y - 6 + arch) == snake[0].y)) {\n\n            logicVar = getRandomInt(5,25);\n            //  console.log(\"Big food x : \"+ BigFoods[i].x);\n            // console.log(\"Big food y: \" + BigFoods[i].y);\n            // console.log(\"snake y x :\" + snake[0].y +\" \"+ snake[0].x)\n            //  console.log(\"arch : \"+ arch);\n            BigFoods.splice(i, 1);\n            // generateBigFood();\n            return 1;\n          }\n        }\n      }\n    }\n  }\n}\nfunction fail(){\n    // location.reload();\n    gameStop = 1;\n    ++gameCount;\n    scoreUi.textContent = Score; \n    window.setTimeout(function(){\n      gameOverWindow.classList.add('active');\n    },350);\n}\nvar state = 0;\nfunction snakeBite(snake_y, snake_x){\n  if ((snake[0].x == snake_x) && (snake[0].y == snake_y)) {\n    fail();\n  }\n}\nfunction collisionDetection() {\n  if (greatWall == 0) {\n    theWall();\n  }else{\n    offWall();\n  }\n  theEat();\n}\n\nfunction drawSnake() {\n  for (var i = snake.length - 1; i >= 0; i--) {\n    if (i != 0){\n      snakeBite(snake[i].y, snake[i].x);\n    }\n    ctx.beginPath();\n    ctx.rect(snake[i].x, snake[i].y, 10, 10);\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n}\nvar Foods = [];\nvar BigFoods = [];\n// Пофикшено Эдом\nfunction generateFood(){\n  // console.log(map.length);\n  var lengthM = map.length;\n  var random_x = getRandomInt(0,lengthM+1);\n  var random_y = getRandomInt(0,lengthM+1);\n\n  if (typeof map[random_x] == 'undefined' || typeof map[random_x][random_y] == 'undefined') {\n    generateFood();\n    return;\n  } \n\n  var food_coords = map[random_x][random_y];\n  // console.log(snake.length);\n  for (var i = snake.length - 1; i >= 0; i--) {\n    if (typeof(snake[i].x) == undefined) {\n      generateFood();\n      return;\n      continue;\n    }\n    try {\n      if ((snake[i].x != food_coords.x) && (snake[i].y != food_coords.y)) {\n        Foods.push({x:5+food_coords.x,y:5+food_coords.y});\n        break;\n      }\n    }catch{\n      continue;\n    }\n  }\n}\nfunction generateBigFood(){\n  var lengthM = map.length;\n  var random_x = getRandomInt(0,lengthM+1);\n  var random_y = getRandomInt(0,lengthM+1);\n\n  if (typeof map[random_x] == 'undefined' || typeof map[random_x][random_y] == 'undefined') {\n    generateBigFood();\n    return;\n  } \n\n  var food_coords = map[random_x][random_y];\n  for (var i = snake.length - 1; i >= 0; i--) {\n    if (typeof(snake[i].x) == undefined) {\n      generateBigFood();\n      return;\n      continue;\n    }\n    try {\n      if ((snake[i].x != food_coords.x) && (snake[i].y != food_coords.y)) {\n        BigFoods.push({x:5+food_coords.x,y:5+food_coords.y});\n        break;\n      }\n    }catch{\n      continue;\n    }\n  }\n}\nfunction renderFood(cord_x,cord_y){\n  // console.log('coordx ='+cord_x+ '?SSC='+cord_y);\n  ctx.beginPath();\n  // ctx.rect(cord_x, cord_y, 10, 10);\n  ctx.arc(cord_x,cord_y,6,0, Math.PI*2);\n  ctx.fillStyle = \"#690\";\n  ctx.fill();\n  ctx.closePath();\n}\nfunction renderBigFood(cord_x,cord_y){\n  var randomColor = [\"#690\", \"#df4037\" ,\"#8bc34a\"];\n  // console.log('coordx ='+cord_x+ '?SSC='+cord_y);\n  ctx.beginPath();\n  // ctx.rect(cord_x, cord_y, 10, 10);\n  ctx.arc(cord_x,cord_y,12,0, Math.PI*2);\n  ctx.fillStyle = randomColor[1];\n  ctx.fill();\n  ctx.closePath();\n}\nfunction drawStop() {\n  ctx.font = \"16px Arial\";\n  ctx.fillStyle = \"#de0e37\";\n  ctx.fillText(\"Stop ⚫\", 445, 20);\n}\nfunction drawScore() {\n  Score = snake.length - 10; \n  ctx.font = \"16px Arial\";\n  ctx.fillStyle = \"#0095DD\";\n  ctx.fillText(\"Score: \"+Score, 8, 20);\n}\nvar logicVar = 0;\nfunction snakeMoveLogic(){\n  theEat();\n  if (logicVar) {\n    logicVar = --logicVar;\n  }else{\n    snake.pop();\n  }\n  snake.unshift({x:snake[0].x + snake_spd_x,y:snake[0].y + snake_spd_y});\n}\nfunction draw() {\n  if (gameStop == 0) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (var i = 0; i < Foods.length; i++) {\n      renderFood(Foods[i].x,Foods[i].y);\n    }\n    for (var i = 0; i < BigFoods.length; i++) {\n      renderBigFood(BigFoods[i].x,BigFoods[i].y);\n    }\n    snakeMoveLogic();\n    drawSnake();\n    collisionDetection();\n    drawScore();\n  }else{\n    drawStop();\n  }\n}\nfunction clear(){\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  drawScore();\n}\nfunction Restart(){\n  snake = [];\n  Score = 0;\n  Foods = [];\n  BigFoods = [];\n  clear();\n  fieldMarking(canvas.width, canvas.height, squarepx);\n  window.setTimeout(function(){\n    generateFood();\n    clear();\n    gameStop = 0;\n  },200);\n  clear();\n}\ndraw();\nfunction recursiveTimeout(){\n  window.setTimeout(function(){\n    draw();\n    recursiveTimeout();\n  },gameSpeed);\n}\nrecursiveTimeout();\n// setInterval(draw, gameSpeed);\ngenerateFood();\ngenerateBigFood();\n// ctx.beginPath();\n// // rect - square\n// // 1 - axisX\n// // 2 - axisY\n// // 3 - width start with left\n// // 4 - height start with top\n// ctx.fillStyle = \"green\";\n// ctx.rect(55,55,50,50);\n// ctx.closePath();\n// ctx.fill();\n// ctx.beginPath();\n// // arc -  circle\n// // 1 - axisX => circle center\n// // 2 - axisY => circle center\n// // 3 - circle radius\n// // 4 - angle and end angle in radians\n// // 5 - direction of drawing (false for clockwise (по часовой) the default, or true for anti-clockwise)\n// // optional parameter\n// // rgb, rgba supported\n\n// ctx.arc(240,160,20,0, Math.PI*2, false);\n// ctx.strokeStyle = \"green\";\n// /// если строук то рисуем линией\n// ctx.stroke();\n// ctx.closePath();\n\n// ctx.beginPath();\n\n// ctx.arc(280,160,20,0, Math.PI*2, false);\n// ctx.fillStyle = \"#000000\";\n// /// если строук то рисуем линией\n// ctx.fill();\n// ctx.closePath();\n\n// ctx.beginPath();\n\n// ctx.rect(20, 40, 50, 50);\n// ctx.fillStyle = \"#FF0000\";\n// ctx.fill();\n// ctx.closePath();\n\n// ctx.beginPath();\n// ctx.rect(160, 10, 100, 40);\n// ctx.strokeStyle = \"rgba(0, 0, 255, 0.5)\";\n// ctx.stroke();\n// ctx.closePath();","var menue = document.querySelector(\".menu\");\nvar scoreUi = document.querySelector('.game-over-notify--score');\nfunction playBtn(){\n\tif (gameCount > 0) {\n\t\tRestart();\n\t}\n\tif (menue.classList.contains('fade')) {\n\t\tgameStop = 1;\n\t}else{\n\t\tmenue.classList.toggle('fade');\n\t\twindow.setTimeout(function(){\n\t\t\tgameStop = 0;\n\t\t},250);\n\t}\n}\nfunction toMenue(){\n\tmenue.classList.remove('fade');\n\tgameOverWindow.classList.remove('active');\t\n}\nfunction rest(){\n\tRestart();\n\tgameOverWindow.classList.remove('active');\t\n}\nfunction otherList(numberList){\n\tvar elements = document.querySelectorAll('.menu__list--item.menu__list--item--main');\n\telements.forEach(function(item, i, arr){\n\t\titem.classList.remove('active');\n\t})\n\tdocument.querySelector('.menu__list--item.menu__list--item--main[data-menu=\"'+numberList+'\"]').classList.toggle('active');\n}\nvar greatWallBtn = document.querySelector('#greatWall');\nfunction vallToggle(){\n\t\tgreatWallBtn.classList.remove('menu__list-button--green');\n\t\tgreatWallBtn.classList.remove('menu__list-button--orange');\n\tif (greatWall == 0) {\n\t\tgreatWallBtn.classList.add('menu__list-button--green');\n\t\tgreatWall = 1;\n\t}else{\n\t\tgreatWallBtn.classList.add('menu__list-button--orange');\n\t\tgreatWall = 0;\n\t}\n}"]}